<menu text="Main menu" title="Main menu">
	<id val="mainmenu"/>
<!-- the following types are allowed:
	<screen [module="mod"] [screen="classname"]>[arguments]</screen>
		executes Screen called "classname" from module "Screen.mod"
		if no module is given, Screen must be globally available.
		if no screen is given, module is used as screen class name.
		arguments must be comma seperated (will be fed to eval), and can
			use stuff from module
		(of course you must specify at least one of module, screen.)
	<setup id="id"/>
		opens a setup with specified id
	<code> .. code .. </code>
		"exec"s code
-->
		<menu weight="7" level="0" text="Timers" entryID="timer_menu">
			<id val="timermenu" />
			<item weight="0" level="0" text="Timers" entryID="timer_edit"><screen module="TimerEdit" screen="TimerEditList" /></item>
			<item weight="10" level="0" text="CronTimers" entryID="crontimer_edit"><screen module="CronTimer" screen="CronTimers" /></item>
		</menu>
		<item level="1" text="VCR scart" entryID="scart_switch" conditional="config.usage.show_vcr_scart.value" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>

		<menu level="0" text="Information" entryID="info_screen">
			<id val="information"/>
			<item level="1" text="Service" entryID="service_info_screen"><screen module="ServiceInfo" screen="ServiceInfo"/></item>
			<item level="0" text="About" entryID="about_screen"><screen module="About"/></item>
			<item level="2" text="Streaming clients info" entryID="streaming_clients_info_screen"><screen module="StreamingClientsInfo"/></item>
		</menu>

		<item level="0" text="Plugins" entryID="plugin_selection"><screen module="PluginBrowser" screen="PluginBrowser"/></item>
		<menu level="0" text="Setup" flushConfigOnClose="1" entryID="setup_selection" >
			<id val="setup"/>
			<menu weight="7" level="0" text="Tuners &amp; scanning" entryID="service_searching_selection">
				<id val="scan"/>
				<item text="Tuner configuration" entryID="tuner_setup" conditional="nimmanager.nim_slots"><screen module="Satconfig" screen="NimSelection"/></item>
				<item text="Automatic scan" entryID="auto_scan" conditional="nimmanager.somethingConnected()"><screen module="ScanSetup" screen="ScanSimple"/></item>
				<item text="Manual scan" entryID="manual_scan" conditional="nimmanager.somethingConnected()"><screen module="ScanSetup"/></item>
				<item text="Fallback remote receiver setup" entryID="fallbacktuner_settings"><screen module="SetupFallbacktuner"/></item>
			</menu>
			<menu weight="5" level="0" text="System" entryID="system_selection">
				<id val="system"/>
				<menu weight="0" level="0" text="Check update Settings" entryID="check_update">
					<id val="update"/>
					<item level="0" entryID="check_update"><setup id="checkupdate"/></item>
				</menu>
				<menu level="0" text="Audio &amp; Video" entryID="video_selection">
					<id val="video"/>
					<item level="0" entryID="av_setup"><setup id="avsetup"/></item>
					<item entryID="subtitle_setup" level="2" text="Subtitle Setup" weight="20"><setup id="subtitlesetup" /></item>
					<item level="0" entryID="autolanguage_setup" text="Auto Language Setup"><setup id="autolanguagesetup"/></item>
					<item entryID="osdsetup" level="1" text="OSD Position Settings" weight="50" requires="OsdMenu"><screen module="UserInterfacePositioner" screen="UserInterfacePositioner2" /></item>
					<item entryID="setup_osd3d" level="2" text="OSD 3D Settings" weight="60" requires="CanChange3DOsd"><setup setupKey="OSD3D" /></item>
				</menu>
				<menu level="0" text="GUI Settings" entryID="gui_settings">
					<id val="gui"/>
					<item level="0" text="Language" entryID="language_setup"><screen module="LanguageSelection"/></item>
					<!-- Menu / Setup / Time -->
					<item entryID="time_setup" level="0" text="Time" weight="50"><screen module="Time" screen="Time" /></item>
					<item level="0" entryID="user_interface" text="User Interface" ><setup id="userinterface"/></item>
					<item level="0" entryID="usage_setup"><setup id="usage"/></item>
					<item level="0" text="Skin" entryID="primary_skin_selector"><screen module="SkinSelector" screen="SkinSelector"/></item>
					<menu entryID="display_selection" level="0" text="Front Panel Display">
						<id val="lcd" />
						<item entryID="display_skin_selector" level="0" text="Skin Setup" weight="5" requires="Display"><screen module="SkinSelector" screen="LcdSkinSelector" /></item>
						<item entryID="lcd_setup" level="1" text="LCD Setup" weight="10" requires="Display"><setup id="FrontDisplay" /></item>
						<item entryID="led_setup" level="1" text="LED Setup" weight="15"><setup id="LedDisplay" /></item>
					</menu>
				</menu>
				<menu entryID="usage_setup" level="0" text="Log Manager" weight="2">
					<id val="logs_menu" />
					<item entryID="logs_setup" level="2" text="Settings"><setup id="Logs" /></item>
					<item entryID="logs_man" level="2" text="View Log Manager"><screen module="LogManager" screen="LogManager" /></item>
				</menu>
				<!-- Menu / Setup / EPG -->
				<menu entryID="epg_menu" level="0" text="EPG" weight="15">
					<id val="epg" />
					<item entryID="epg_setup" level="0" text="EPG Setup" weight="5"><setup id="EPG" /></item>
					<menu entryID="epgloadsave_menu" level="2" text="Save, Load &amp; Delete EPG Cache" weight="10">
						<id val="epgloadsave_menu" />
						<item entryID="saveepgcache" level="0" text="Save EPG Cache">
							<code>
from Components.EpgLoadSave import EpgSaveMsg
def msgClosed(ret):
	if ret:
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.save()
self.session.openWithCallback(msgClosed, EpgSaveMsg)
							</code>
						</item>
						<item entryID="loadepgcache" level="0" text="Load EPG Cache">
							<code>
from Components.EpgLoadSave import EpgLoadMsg
def msgClosed(ret):
	if ret:
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.load()
self.session.openWithCallback(msgClosed, EpgLoadMsg)
							</code>
						</item>
						<item entryID="deleteepgcache" level="0" text="Delete EPG Cache">
							<code>
from Components.EpgLoadSave import EpgDeleteMsg
def msgClosed(ret):
	if ret:
		import os
		from Components.config import config
		if os.path.exists(config.misc.epgcache_filename.value):
			os.remove(config.misc.epgcache_filename.value)
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.flushEPG()
self.session.openWithCallback(msgClosed, EpgDeleteMsg)
							</code>
						</item>
					</menu>
				</menu>
				<item level="1" entryID="rfmod_setup" requires="RfModulator"><setup id="RFmod"/></item>
				<menu level="0" text="Expert settings" entryID="expert_selection">
				<id val="expert"/>
				<item level="0" entryID="accesslevel_setup"><setup id="accesslevel"/></item>
				<!-- Menu / Setup / Recordings, Playback & Timeshift -->
				<menu entryID="rec_setup" level="1" text="Playback, Recording &amp; Timeshift" weight="45">
					<id val="rec" />
					<item entryID="playback_setup" level="0" text="Playback Setup" weight="5"><setup id="Playback" /></item>
					<item entryID="recording_setup" level="0" text="Recording Setup" weight="10"><screen module="Recording" screen="RecordingSettings" /></item>
					<item entryID="timeshift_setup" level="0" text="Timeshift Setup" weight="15"><screen module="Timeshift" screen="TimeshiftSettings" /></item>
					<item entryID="hdmirecord_setup" level="0" text="HDMI-IN Recording settings" weight="15" requires="HDMIin"><setup id="HDMIRecord"/></item>
				</menu>
				<menu level="0" text="Harddisk" entryID="hardisk_selection" requires="Harddisk">
					<id val="harddisk"/>
					<item level="0" entryID="harddisk_setup"><setup id="harddisk"/></item>
					<item level="0" text="Initialization" entryID="harddisk_init"><screen module="HarddiskSetup" screen="HarddiskSelection"/></item>
					<item level="0" text="Filesystem check" entryID="harddisk_check"><screen module="HarddiskSetup" screen="HarddiskFsckSelection"/></item>
					<item entryID="flash_expander" level="2" text="Flash Expander" weight="40"><screen module="FlashExpander" screen="FlashExpander" /></item>
				</menu>
				<item level="0" text="Network" entryID="network_setup"><screen module="NetworkSetup" screen="NetworkAdapterSelection"/></item>
				<item level="1" text="Input devices" entryID="input_device_setup"><screen module="InputDeviceSetup" screen="InputDeviceSelection"/></item>
				<item entryID="keyboard_setup" text="Keyboard"><setup id="keyboard"/></item>
				<item level="1" text="Hotkey" entryID="hotkey_setup"><screen module="Hotkey" screen="HotkeySetup"/></item>
				</menu>
			</menu>

			<menu weight="10" text="SoftCam / CI" entryID="cam_setup">
				<id val="cam"/>
				<item weight="10" level="0" text="Softcam Setup" entryID="softcam_setup"><screen module="SoftcamSetup" screen="SoftcamSetup"/></item>
				<item weight="10" level="0" text="Common Interface" entryID="ci_setup" requires="CommonInterface"><screen module="Ci" screen="CiSelection"/></item>
				<item weight="110" level="2" text="Stream Relay Settings" entryID="streamrelay_settings"><screen module="SoftcamSetup" screen="StreamRelaySetup" /></item>
			</menu>

			<item weight="15" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup"/></item>
			<item weight="15" level="0" text="Factory reset" entryID="factory_reset"><screen module="FactoryReset" screen="FactoryReset"/></item>
			<!--item entryID="flash_online" level="0" text="Flash image Online" description="Download and flash images on your device." weight="13"><screen module="FlashManager" screen="FlashManager" /></item-->
			<!--item weight="15" level="0" text="Software update" entryID="software_update"><screen module="SoftwareUpdate" screen="UpdatePlugin"/></item-->
		</menu>

		<menu text="Standby / restart" entryID="standby_restart_list">
			<id val="shutdown"/>
			<item text="Sleep timer" entryID="sleep"><screen module="SleepTimerEdit" screen="SleepTimerEdit"/></item>
			<item text="Standby" entryID="standby"><screen module="Standby" screen="Standby"/></item>
			<item text="Full Restart" entryID="restart"><screen module="Standby" screen="TryQuitMainloop">2</screen></item>
			<item weight="24" level="0" text="Switch to Android" requires="canDualBoot" entryID="dualboot"><screen module="Standby" screen="SwitchToAndroid" /></item>
			<!--item text="Restart enigma" requires="InDebugMode" entryID="restart_enigma_debug"><screen module="Standby" screen="TryQuitMainloop">6</screen></item>
			<item text="Restart enigma" requires="!InDebugMode" entryID="restart_enigma"><screen module="Standby" screen="TryQuitMainloop">3</screen></item-->
			<item text="Restart enigma" entryID="restart_enigma"><screen module="Standby" screen="TryQuitMainloop">3</screen></item>
			<!--item text="Restart enigma in standard mode" requires="InDebugMode" entryID="restart_enigma"><screen module="Standby" screen="TryQuitMainloop">3</screen></item>
			<item text="Restart enigma in debug mode" requires="!InDebugMode" entryID="restart_enigma_debug"><screen module="Standby" screen="TryQuitMainloop">6</screen></item-->
			<item entryID="multiboot" level="0" text="MultiBoot Manager" weight="6" requires="canMultiBoot"><screen module="MultiBootManager" screen="MultiBootManager" /></item>
			<item entryID="kexec_multiboot" level="2" text="Enable Kexec MultiBoot" weight="6" requires="cankexec"><screen module="MultiBootManager" screen="KexecInit">1</screen></item>
			<item text="Deep standby" requires="DeepstandbySupport" entryID="deep_standby"><screen module="Standby" screen="TryQuitMainloop">1</screen></item>
			<item text="Shutdown" requires="!DeepstandbySupport" entryID="deep_standby"><screen module="Standby" screen="TryQuitMainloop">1</screen></item>
			<item entryID="maintenance_mode" level="0" text="Recovery Mode" weight="55" requires="RecoveryMode"><screen module="Standby" screen="TryQuitMainloop">16</screen></item>
		</menu>
</menu>
